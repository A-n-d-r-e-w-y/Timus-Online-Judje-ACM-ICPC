const nmax=10;
var
 a,nnew:array[1..nmax,1..nmax] of boolean;
 listx,listy:array[1..nmax*nmax] of longint;
 t:array[1..nmax*nmax] of string;
 n,m,i,j,k,x0,y0,x,y,z:longint;
 s:string;
 ch:char;

procedure Solve1(up,down,n:longint);
 var x,y:longint;
begin
 inc(down);
 if(down<=up) then begin
  x:=listx[down];
  y:=listy[down];
  if(y+1<=nmax)and(a[x,y+1])and(nnew[x,y+1]) then begin
   write('R');
   nnew[x,y+1]:=false;
  end;
  if(x-1>=1)and(a[x-1,y])and(nnew[x-1,y]) then begin
   write('T');
   nnew[x-1,y]:=false;
  end;
  if(y-1>=1)and(a[x,y-1])and(nnew[x,y-1]) then begin
   write('L');
   nnew[x,y-1]:=false;
  end;
  if(x+1<=nmax)and(a[x+1,y])and(nnew[x+1,y]) then begin
   write('B');
   nnew[x+1,y]:=false;
  end;
  if(down<n) then writeln(',');
  if(y+1<=nmax)and(a[x,y+1]) then begin
   a[x,y+1]:=false;
   inc(up);
   listx[up]:=x;
   listy[up]:=y+1;
  end; 
  if(x-1>=1)and(a[x-1,y]) then begin
   a[x-1,y]:=false;
   inc(up);
   listx[up]:=x-1;
   listy[up]:=y;
  end; 
  if(y-1>=1)and(a[x,y-1]) then begin
   a[x,y-1]:=false;
   inc(up);
   listx[up]:=x;
   listy[up]:=y-1;
  end; 
  if(x+1<=nmax)and(a[x+1,y]) then begin
   a[x+1,y]:=false;
   inc(up);
   listx[up]:=x+1;
   listy[up]:=y;
  end;
  Solve1(up,down,n);
 end;
end;
 
 
procedure Solve2(up,down:longint);
 var x,y:longint;
begin
 inc(down);
 if(down<=up) then begin
  x:=listx[down];
  y:=listy[down];
  a[x,y]:=true;
  if(t[k][1]='R') then begin
   inc(up);
   listx[up]:=x+1;
   listy[up]:=y;
   delete(t[k],1,1);
  end; 
  if(t[k][1]='T') then begin
   inc(up);
   listx[up]:=x;
   listy[up]:=y+1;
   delete(t[k],1,1);
  end; 
  if(t[k][1]='L') then begin
   inc(up);
   listx[up]:=x-1;
   listy[up]:=y;
   delete(t[k],1,1);
  end; 
  if(t[k][1]='B') then begin
   inc(up);
   listx[up]:=x;
   listy[up]:=y-1;
  end;
  inc(k);
  Solve2(up,down);
 end;
end;

 
 
begin
 readln(s);
 if(pos(' ',s)>0) then begin
  val(copy(s,1,pos(' ',s)-1),x0,n);
  delete(s,1,pos(' ',s));
  val(s,y0,n);
  n:=nmax;
  m:=nmax;
  for i:=1 to n do begin
  for j:=1 to m do begin
   a[i,j]:=false;
  end;
  end;
  
  k:=0;
  while(not eof) do begin
   inc(k);
   readln(t[k]);
   if(t[k]='.') then writeln(k);
   if(length(t[k])<4) then t[k]:=t[k]+'abracadabra';
  end;
  
  listx[1]:=x0;
  listy[1]:=y0;
  k:=1;
  Solve2(1,0);
  for i:=1 to n do begin
  for j:=1 to m do begin
   if(a[i,j]) then writeln(i,' ',j);
  end;
  end;
 end
 else begin
  val(s,k,n);
  n:=nmax;
  m:=nmax; 
  readln(x0,y0);
  writeln(x0,' ',y0);
  z:=x0;
  x0:=n+1-y0;
  y0:=z;
  for i:=1 to n do begin
  for j:=1 to m do begin
   a[i,j]:=false;
   nnew[i,j]:=true;
  end;
  end;
  a[x0,y0]:=true;
  for i:=1 to k-1 do begin
   readln(x,y);
   z:=x;
   x:=n+1-y;
   y:=z;
   a[x,y]:=true;
  end; 
  
  x0:=1;
  y0:=m;
  for i:=1 to n do begin
  for j:=1 to m do begin
   if(a[i,j])and((j<y0)or(j=y0)and(i>x0)) then begin
    x0:=i;
    y0:=j;
   end;    
  end;
  end;
  
  a[x0,y0]:=false;
  listx[1]:=x0;
  listy[1]:=y0;
  Solve1(1,0,k);
  write('.');
 end; 
end.