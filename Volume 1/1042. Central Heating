const nmax=300;
var
 a,s:array[1..nmax,1..nmax] of longint;
 sol,p:array[1..nmax] of longint;
 n,i,j:longint;

procedure Gauss;
 var t,i,j,k:longint;
begin
 for t:=1 to n-1 do begin
  i:=t;
  while(a[i,t]=0) do inc(i);
  for j:=1 to n+1 do begin
   k:=a[t,j];
   a[t,j]:=a[i,j];
   a[i,j]:=k;
  end;
  for i:=t+1 to n do begin
   if(a[i,t]=1) then begin
    for j:=1 to n+1 do a[i,j]:=(a[i,j]+a[t,j]) mod 2;
   end;
  end;
 end;
 for t:=n downto 2 do begin
  if(a[t,t]=1) then begin
   for i:=t-1 downto 1 do begin
    if(a[i,t]=1) then begin
     for j:=1 to n+1 do a[i,j]:=(a[i,j]+a[t,j]) mod 2;
    end;
   end;
  end;
 end;
end; 

begin
 readln(n);
 for i:=1 to n do begin
  j:=1;
  read(s[i,j]);
  while(s[i,j]<>-1) do begin
   inc(j);
   read(s[i,j]);
  end; 
  readln;
 end;
 
 for i:=1 to n do begin
 for j:=1 to n do begin
  a[i,j]:=0;
 end;
 end;
 
 for i:=1 to n do begin
  a[i,n+1]:=1;
  p[i]:=0;
 end; 
 
 for i:=1 to n do begin
  j:=1;
  while(s[i,j]<>-1) do begin
   a[s[i,j],i]:=1;
   p[s[i,j]]:=1;
   inc(j);
  end;
 end;
 
 j:=0;
 for i:=1 to n do inc(j,p[i]);
 
 if(j<n) then write('No solution')
 else begin
  Gauss;
  j:=1;
  for i:=1 to n do begin
   sol[i]:=-1;
   if(a[i,i]=1) then sol[i]:=a[i,n+1];
   if(a[i,i]=0)and(a[i,n+1]=1) then j:=-1;
  end;
  if(j=-1) then write('No solution')
  else begin
   for i:=1 to n do if(sol[i]=1) then write(i,' ');
  end;
 end;
end.