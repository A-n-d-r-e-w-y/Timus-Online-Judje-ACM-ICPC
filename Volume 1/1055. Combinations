const NMAX=150000;
var
 step:array[1..3,1..NMAX] of longint;
 prime:array[1..NMAX] of boolean;
 d:array[1..NMAX] of longint;
 N,M,i,j,ans:longint;
 
procedure Razl(x,numb:longint);
begin
 while(x>1) do begin
  inc(step[numb,d[x]]);
  x:=x div d[x];
 end;
end;

begin
 for i:=2 to NMAX do prime[i]:=true;
 
 for i:=2 to NMAX do begin
  if(prime[i]) then begin
   d[i]:=i;
   j:=2*i;
   while(j<=NMAX) do begin prime[j]:=false;d[j]:=i;inc(j,i);end;
  end;
 end;
 
 for i:=1 to NMAX do begin
  step[1,i]:=0;
  step[2,i]:=0;
  step[3,i]:=0;
 end; 
 
 read(N,M);
 for i:=2 to N do Razl(i,1);
 for i:=2 to M do Razl(i,2);
 for i:=2 to N-M do Razl(i,3);
 
 ans:=0;
 for i:=2 to N do if(step[1,i]>step[2,i]+step[3,i]) then inc(ans);
 
 write(ans);
end.