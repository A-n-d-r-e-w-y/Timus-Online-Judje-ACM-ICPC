const Nmax=65536;
      Mmax=4;
type matrix=array[1..Mmax,1..Mmax] of 0..1;     
var
 Dp,List:array[0..Nmax-1] of longint;
 A:matrix;
 Step:array[0..Mmax*Mmax] of longint;
 N,i,j,t,Ans,up,down:longint;
 ch:char;
 
procedure Solve(up,down:longint);
 var i,j,t,i1,j1:byte;
     Sum,Sum1:longint;
begin
 inc(down);
 if(down<=up) then begin
  Sum:=List[down];
  
  
  t:=0;
  for i:=1 to Mmax do begin
  for j:=1 to Mmax do begin
   A[i,j]:=((Sum shr t) and 1) mod 2;
   inc(t);
  end;
  end;
   
  for i:=1 to Mmax do begin
  for j:=1 to Mmax do begin
   if(i-1>=1) then A[i-1,j]:=1-A[i-1,j];
   A[i,j]:=1-A[i,j];
   if(i+1<=Mmax) then A[i+1,j]:=1-A[i+1,j];
   if(j-1>=1) then A[i,j-1]:=1-A[i,j-1];
   if(j+1<=Mmax) then A[i,j+1]:=1-A[i,j+1];
    
    t:=0;
    Sum1:=0;
    for i1:=1 to Mmax do begin
    for j1:=1 to Mmax do begin
     Sum1:=Sum1+A[i1,j1]*Step[t];
     inc(t);
    end;
    end; 
    
    
   if(Dp[Sum1]=-1) then begin
    Dp[Sum1]:=Dp[Sum]+1;
    inc(up);
    List[up]:=Sum1;
   end;  
   
   if(i-1>=1) then A[i-1,j]:=1-A[i-1,j];
   A[i,j]:=1-A[i,j];
   if(i+1<=Mmax) then A[i+1,j]:=1-A[i+1,j];
   if(j-1>=1) then A[i,j-1]:=1-A[i,j-1];
   if(j+1<=Mmax) then A[i,j+1]:=1-A[i,j+1];
  end;
  end;
  
  Solve(up,down);
 end;
end; 
 
BEGIN
 for i:=0 to Nmax-1 do Dp[i]:=-1;
 Step[0]:=1;
 for i:=1 to Mmax*Mmax do Step[i]:=Step[i-1]*2;
 
 t:=0;
 Ans:=0;
 
 for i:=1 to Mmax do begin
 for j:=1 to Mmax do begin
  read(ch);
  if(ch='w') then A[i,j]:=0
  else A[i,j]:=1;
  Ans:=Ans+A[i,j]*Step[t];
  inc(t);
  if(j=Mmax) then readln;
 end;
 end;
 
 down:=0;
 up:=1;
 List[up]:=Ans;
 Dp[Ans]:=0;
 Solve(up,down);
 
 if(Dp[0]=-1)and(Dp[Nmax-1]=-1) then write('Impossible')
 else begin
  Ans:=Dp[0];
  if(Ans=-1)or(Ans<>-1)and(Ans>Dp[Nmax-1]) then Ans:=Dp[Nmax-1];
  write(Ans);
 end; 
END.