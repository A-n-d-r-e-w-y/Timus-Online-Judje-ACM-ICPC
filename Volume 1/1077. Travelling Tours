const Nmax=200;
      Mmax=Nmax*Nmax;
var
 A:array[1..Nmax,1..Nmax] of -1..1;
 B:array[1..Nmax,1..Nmax] of integer;
 Predok,Count:array[1..Mmax] of integer;
 Nnew:array[1..Nmax] of boolean;
 N,M,i,j,x,y,comp,len:integer;
 
procedure CreateTree(v:integer);
 var j:integer;
begin
 Nnew[v]:=false;
 for j:=1 to N do begin
  if(Nnew[j])and(A[v,j]=1) then begin
   A[v,j]:=-1;
   A[j,v]:=-1;
   inc(count[v]);
   inc(count[j]);
   B[v,count[v]]:=j;
   B[j,count[j]]:=v;
   CreateTree(j);
  end;
 end;
end; 

procedure FindPath(v:integer);
 var t:integer;
begin
 Nnew[v]:=false;
 for t:=1 to count[v] do begin
  if(Nnew[b[v,t]]) then begin
   Predok[b[v,t]]:=v;
   FindPath(b[v,t]);
  end;
 end;
end; 
 
BEGIN
 readln(N,M);
 for i:=1 to N do begin
 for j:=1 to N do begin
  A[i,j]:=0;
  if(i=j) then A[i,j]:=-1; {СЂР°СЃРєСЂР°С€РµРЅРѕ}
 end;
 end;
 
 for i:=1 to M do begin
  readln(x,y);
  A[x,y]:=1;
  A[y,x]:=1;
 end;
 
 for i:=1 to N do begin
  Nnew[i]:=true;
  Count[i]:=0;
 end;
 
 comp:=0;
 for i:=1 to N do begin
  if(Nnew[i]) then begin
   inc(comp);
   CreateTree(i);
  end;
 end;
 
 writeln(M-N+comp);
 
 for i:=1 to N-1 do begin
 for j:=i+1 to N do begin
  if(A[i,j]=1) then begin
   for x:=1 to N do Nnew[x]:=true;
   len:=0;
   A[i,j]:=-1;
   A[j,i]:=-1;
   Predok[i]:=0;
   FindPath(i);
   x:=j;
   while(x>0) do begin
    inc(len);
    x:=Predok[x];
   end;
   write(len,' ');
   x:=j;
   while(x>0) do begin
    write(x,' ');
    x:=Predok[x];
   end;
   writeln;
  end;
 end;
 end;
END. 