const Nmax=11111;
type Dvector=array of longint;
var
 t:array[1..4*Nmax] of Dvector;
 a:array[1..Nmax] of longint;
 N,K,i,q,numb:longint;
 max,now:int64;
 
procedure Create(v,tl,tr:longint);
 var m,i,j,len,len1,len2:longint;
begin
 SetLength(t[v],tr-tl+2);
 if(tl=tr) then begin 
  len:=1;
  t[v][1]:=a[tl];
 end 
 else begin
  m:=(tl+tr) div 2;
  Create(2*v,tl,m);
  Create(2*v+1,m+1,tr);
  
  len1:=m-tl+1;
  len2:=tr-m;
  i:=1;
  j:=1;
  len:=0;
  
  while(i<=len1)and(j<=len2) do begin
   if(t[2*v][i]<t[2*v+1][j]) then begin
    inc(len);
    t[v][len]:=t[2*v][i];
    inc(i);
   end
   else begin
    inc(len);
    t[v][len]:=t[2*v+1][j];
    inc(j);
   end;
  end;
  
  while(i<=len1) do begin
   inc(len);
   t[v][len]:=t[2*v][i];
   inc(i);
  end;
  
  while(j<=len2) do begin
   inc(len);
   t[v][len]:=t[2*v+1][j];
   inc(j);
  end;
 end; 
end;  

procedure Search(v,tl,tr,l,r,x:longint);
 var m,i:longint;
begin
 //writeln(v,' ',tl,' ',tr,' ',l,' ',r,' ',x,' ',now);
 if(tl=l)and(tr=r) then begin
  L:=1;
  R:=tr-tl+1;
  if(t[v][R]>a[x]) then  begin
   m:=(L+R) div 2;
   if(tr-tl<=2) then begin
    if(t[v][L]>a[x]) then inc(now);
    if(t[v][R]>a[x])and(R>L) then inc(now);
    m:=0;
   end;
   
   while(m>0) do begin
    if(t[v][m]>a[x])and((m=L) or (m>L)and(t[v][m-1]<a[x])) then begin 
     inc(now,R-m+1);
     m:=0;
    end;
    
    if(m>0) then begin
     if(t[v][m]<a[x]) then L:=m+1
     else begin
      inc(now,R-m+1);
      R:=m-1;
     end; 
     if(L>R) then m:=0
     else m:=(L+R) div 2;
    end;
   end;
  end;
 end
 else begin
  m:=(tl+tr) div 2;
  if(r<=m) then Search(2*v,tl,m,l,r,x);
  if(l>m) then Search(2*v+1,m+1,tr,l,r,x);
  if(l<=m)and(r>m) then begin Search(2*v,tl,m,l,m,x);Search(2*v+1,m+1,tr,m+1,r,x);end;
 end;
end; 
 
BEGIN
 readln(N,K); 
 max:=0;
 numb:=1;
 for q:=1 to K do begin
  for i:=1 to N do read(a[i]);
  readln;
  Create(1,1,N);
  now:=0;
  for i:=2 to N do begin 
   Search(1,1,N,1,i-1,i);
  end;
  
  if(max<now) then begin
   max:=now;
   numb:=q;
  end; 
 end; 
 
 write(numb);
END. 