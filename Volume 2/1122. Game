const nmax=65536;
      inf=987654321;
type matrix=array[1..4,1..4] of longint;
var
 dist,list:array[0..nmax] of longint;
 i,j,v0,step:longint;
 a:array[1..3,1..3] of longint;
 c:char;
 m:matrix;

function ToMatrix(v:longint):matrix;
 var i,j:longint;
     m:matrix;
begin
 for i:=1 to 4 do begin
 for j:=1 to 4 do begin
  m[i,j]:=v mod 2;
  v:=v div 2;
 end;
 end;
 ToMatrix:=m;
end;

function ToNumber(m:matrix):longint;
 var i,j,res,step:longint;
begin
 res:=0;
 step:=1;
 for i:=1 to 4 do begin
 for j:=1 to 4 do begin
  res:=res+m[i,j]*step;
  step:=step*2;
 end;
 end;
 ToNumber:=res;
end;
 
procedure G(up,down:longint);
 var v,w,i,j:longint;
     m:matrix;
begin
 inc(down);
 if(down<=up) then begin
  v:=List[down];
  for i:=1 to 4 do begin
  for j:=1 to 4 do begin
   m:=ToMatrix(v);
   if(a[2,2]=1) then m[i,j]:=1-m[i,j];
   if(a[2,1]=1)and(j-1>=1) then m[i,j-1]:=1-m[i,j-1];
   if(a[2,3]=1)and(j+1<=4) then m[i,j+1]:=1-m[i,j+1];
   if(a[1,2]=1)and(i-1>=1) then m[i-1,j]:=1-m[i-1,j];
   if(a[1,1]=1)and(i-1>=1)and(j-1>=1) then m[i-1,j-1]:=1-m[i-1,j-1];
   if(a[1,3]=1)and(i-1>=1)and(j+1<=4) then m[i-1,j+1]:=1-m[i-1,j+1];
   if(a[3,2]=1)and(i+1<=4) then m[i+1,j]:=1-m[i+1,j];
   if(a[3,1]=1)and(i+1<=4)and(j-1>=1) then m[i+1,j-1]:=1-m[i+1,j-1];
   if(a[3,3]=1)and(i+1<=4)and(j+1<=4) then m[i+1,j+1]:=1-m[i+1,j+1];
   w:=ToNumber(m);
   if(dist[w]=inf) then begin
    dist[w]:=dist[v]+1;
    inc(up);
    list[up]:=w;
   end;
  end;
  end;
  G(up,down);
 end;
end;
 
begin
 v0:=0;
 step:=1;
 
 for i:=1 to 4 do begin
 for j:=1 to 4 do begin
  read(c);
  if(c='B') then inc(v0,step);
  step:=step*2;
  if(j=4) then readln;
 end;
 end;
 
 for i:=1 to 3 do begin
 for j:=1 to 3 do begin
  read(c);
  if(c='1') then a[i,j]:=1
  else a[i,j]:=0;
  if(j=3) then readln;
 end;
 end;

 
 for i:=0 to nmax do dist[i]:=inf;
 dist[v0]:=0;
 
 List[1]:=v0;
 G(1,0);
 
 if(dist[0]>dist[nmax-1]) then dist[0]:=dist[nmax-1];
 
 if(dist[0]<inf) then write(dist[0])
 else write('Impossible');
end.