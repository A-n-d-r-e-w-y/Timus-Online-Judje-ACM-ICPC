Const Nmax=20; 
      Mmax=1048576;
      inf=999999999999999;
var
 Dp:array[0..Mmax] of int64;
 a:array[1..Nmax] of byte;
 Mask,R:longint;
 N,i,j:byte;
 Sall,Sv,v1,v2,v3:int64;

function Min(x,y:int64):int64;
begin
 if(x>y) then x:=y;
 Min:=x;
end; 
 
BEGIN
 readln(N);
 if(N>3) then begin
  for i:=1 to N do read(a[i]);
  R:=1;
  for i:=1 to N do R:=R*2;
  Mask:=0;
  Dp[Mask]:=0;
 
  while(Mask+1<=R-1) do begin
   inc(Mask);
   Dp[Mask]:=inf;
   Sall:=0;
   
   for i:=0 to N-1 do if((Mask shr i) and 1<>0) then Sall:=Sall+a[N-i];
   
   for i:=0 to N-3 do begin
    Sv:=0;
    v1:=0;
    v2:=0;
    v3:=0;
    if((Mask shr i) and 1<>0) then begin Sv:=Sv+a[N-i];v1:=1 shl i;end;
    if((Mask shr (i+1)) and 1<>0) then begin Sv:=Sv+a[N-i-1];v2:=1 shl (i+1);end;  
    if((Mask shr (i+2)) and 1<>0) then begin Sv:=Sv+a[N-i-2];v3:=1 shl (i+2);end;
    Dp[Mask]:=min(Dp[Mask],Dp[Mask-v1-v2-v3]+Sall-Sv);
   end;
   
   i:=N-2;
   Sv:=0;
   v1:=0;
   v2:=0;
   v3:=0;
   if((Mask shr i) and 1<>0) then begin Sv:=Sv+a[N-i];v1:=1 shl i;end;
   if((Mask shr (i+1)) and 1<>0) then begin Sv:=Sv+a[N-i-1];v2:=1 shl (i+1);end;  
   if((Mask shr 0) and 1<>0) then begin Sv:=Sv+a[N];v3:=1 shl 0;end;
   Dp[Mask]:=min(Dp[Mask],Dp[Mask-v1-v2-v3]+Sall-Sv);
   
   i:=N-1;
   Sv:=0;
   v1:=0;
   v2:=0;
   v3:=0;
   if((Mask shr i) and 1<>0) then begin Sv:=Sv+a[N-i];v1:=1 shl i;end;
   if((Mask shr 0) and 1<>0) then begin Sv:=Sv+a[N];v2:=1 shl 0;end;  
   if((Mask shr 1) and 1<>0) then begin Sv:=Sv+a[N-1];v3:=1 shl 1;end;
   Dp[Mask]:=min(Dp[Mask],Dp[Mask-v1-v2-v3]+Sall-Sv);
  end; 
  
  write(Dp[R-1]);  
 end
 else begin
  write('0');
 end;  
END.  