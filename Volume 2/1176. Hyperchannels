const Nmax=2000;
type pnt=^elem;
     elem=record
      info:integer;
      next:pnt;
     end; 
var 
 Adr,Koh:array[1..Nmax] of pnt;
 Ans,Stack:array[1..Nmax*Nmax] of integer;
 D:array[1..Nmax] of integer;
 N,i,j,r,v0,top,v:integer; 
 k:pnt;

procedure Solve(v:integer);
 var j:integer;
     k:pnt;
begin
 while(top<>0) do begin
  if(D[stack[top]]=0) then begin 
   inc(r);
   Ans[r]:=stack[top];
   dec(top);
  end  
  else begin
   k:=Adr[stack[top]];
    j:=k^.info;  
    Adr[stack[top]]:=k^.next;
    dec(D[stack[top]]);
    inc(top);
    Stack[top]:=j;
    k:=k^.next;
  end; 
 end;  
end;

begin 
 readln(N,v0); 
 for i:=1 to N do D[i]:=0;
 
 for i:=1 to N do begin
 for j:=1 to N do begin
  read(v);
  if(v=0)and(i<>j) then begin 
   inc(D[i]);
   if(D[i]=1) then begin
    new(k);
    k^.info:=j;
    k^.next:=nil;
    Adr[i]:=k;
    Koh[i]:=k;
   end
   else begin
    new(k);
    k^.info:=j;
    k^.next:=nil;
    Koh[i]^.next:=k;
    Koh[i]:=k;
   end; 
  end;
  if(j=N) then readln;
 end;
 end;
 
 top:=1;
 Stack[top]:=v0;
 r:=0;
 Solve(v0); 
 
 for i:=r-1 downto 1 do writeln(Ans[i+1],' ',Ans[i]);
end. 
 
 