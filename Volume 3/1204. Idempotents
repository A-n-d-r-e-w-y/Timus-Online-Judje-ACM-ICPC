#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

const int NMAX = 100000;

int gcd(int a, int b, int & x, int & y)
{
    if (a == 0)
    {
        x = 0; y = 1;
        return b;
    }
    int x1, y1;
    int d = gcd(b%a, a, x1, y1);
    x = y1 - (b / a) * x1;
    y = x1;
    return d;
}


void main()
{
    int ans[NMAX];
    bool prime[NMAX];
    int p1[NMAX];
    int r, k, r1;
    int N, x, y, p, q, t;
    long long z;

    for (int i = 2; i < NMAX; i++) prime[i] = 1;
    for (int i = 2; i < NMAX; i++)
    {
        if (prime[i])
        {
            for (int j = 2 * i; j < NMAX; j = j + i) prime[j] = 0;
        }

    }

    r1 = 1;
    p1[r1] = 2;
    for (int i = 3; i < NMAX; i++)
        if (prime[i]) { ++r1; p1[r1] = i; }

    scanf("%d", &k);

    for (int i = 0; i < k; i++)
    {
        scanf("%d", &N);
        int j = 1;
        while ((N % p1[j]) != 0) j++;
        p = p1[j];
        q = N / p;

        ans[1] = 0;
        ans[2] = 1;
        r = 2;
        x = 0;
        y = 0;
        gcd(p, q, x, y);
        t = x / q;
        t = -t;
        while (x + q*t < 0) t++;
        while ((x + q*t)*p < N)
        {
            z = (x + q*t)*p;
            long long L = (z*z - z);
            if ((L % N) == 0) { ++r; ans[r] = (int)z; }
            t++;
        }

        x = 0;
        y = 0;
        gcd(q, p, x, y);
        t = x / p;
        t = -t;
        while (x + p*t < 0) t++;
        while ((x + p*t)*q < N)
        {
            z = (x + p*t)*q;
            long long L = (z*z - z);
            if ((L % N) == 0) { ++r; ans[r] = (int)z; }
            t++;
        }

        for (int i = 1; i < r; i++)
            for (int j = r; j >= i; j--)
                if (ans[i]>ans[j]) { z = ans[i]; ans[i] = ans[j]; ans[j] = (int)z; }


        printf("%d ", ans[1]);
        for (int i = 2; i <= r; i++) if (ans[i] > ans[i - 1]) printf("%d ", ans[i]);
        printf("\n");
    }

}