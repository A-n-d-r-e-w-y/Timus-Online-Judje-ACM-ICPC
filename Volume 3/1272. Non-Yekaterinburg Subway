const Nmax=10000;
type pnt=^elem;
     elem=record
      info:integer;
      next:pnt;
     end;   
var
 Adr,Koh:array[1..Nmax] of pnt;
 Nnew:array[1..Nmax] of boolean;
 List:array[1..Nmax] of integer;
 N,M,i,up,down,r:integer;
 k:pnt;
 
procedure G(up,down:integer);
 var k:pnt;
     v,u:integer;
begin
 inc(down);
 v:=0;
 if(down<=N) then v:=List[down];
 if(down<=up)and(v<>0) then begin
  k:=Adr[v];
  while(k<>nil) do begin
   u:=k^.info;
   k:=k^.next;
   if(Nnew[u]) then begin
    Nnew[u]:=false;
    inc(up);
    List[up]:=u;
   end;
  end;
  G(up,down);
 end;
end;          
 
BEGIN
 readln(N,M);
 for i:=1 to N do begin
  Adr[i]:=nil;
  Nnew[i]:=true; 
 end;
 
 for i:=1 to M do begin
  readln(up,down);
  if(Adr[up]=nil) then begin
   new(k);
   k^.info:=down;
   k^.next:=nil;
   Adr[up]:=k;
   Koh[up]:=k;
  end
  else begin
   new(k);
   k^.info:=down;
   k^.next:=nil;
   Koh[up]^.next:=k;
   Koh[up]:=k;
  end;
  if(Adr[down]=nil) then begin
   new(k);
   k^.info:=up;
   k^.next:=nil;
   Adr[down]:=k;
   Koh[down]:=k;
  end
  else begin
   new(k);
   k^.info:=up;
   k^.next:=nil;
   Koh[down]^.next:=k;
   Koh[down]:=k;
  end;   
 end;
 
 r:=0;
 for i:=1 to N do begin
  if(Nnew[i]) then begin
   inc(r);
   up:=1;
   down:=0;
   List[up]:=i;
   Nnew[i]:=false;
   G(up,down);
  end;
 end;
 
 write(r-1);  
END. 